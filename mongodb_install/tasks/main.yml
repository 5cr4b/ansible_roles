---
# tasks file for mongodb_install

- name: Import list file for Mongodb
  template:
    src: mongodb_repo.list.j2
    dest: "{{ mongodb_key_store }}"
    #owner: "{{ mongodb_user }}"
    #group: "{{ mongodb_group }}"
  tags:
  - install
  - apt

- name: Import Mongodb key
  ansible.builtin.apt_key:
    url: "{{ mongodb_repo }}"
    state: present
    # ignore SSL cert for target url
    validate_certs: false
    # store keyfile
    #file: "{{ mongodb_key_store }}"
  become: true
  tags:
  - install
  - apt

- name: Update package
  ansible.builtin.apt:
    update_cache: no
    upgrade: yes
    state: present
  become: true
  tags:
  - install
  - apt

- name: Install mongodb-org
  apt:
    name: mongodb-org
    state: present
  become: true 
  notify:
    - Stop mongodb
  tags:
  - apt
  - install


- name: Create New Folder to Store Data
  ansible.builtin.file:
    path: "{{ mount_point }}"
    state: dictionary
    owner: "{{ mongodb_user }}"
    group: "{{ mongodb_group }}"
  become: true
  tags:
  - install 
  - mount
  - folder

- name: Copy Default Folder
  ansible.builtin.copy:
    remote_src: true 
    src: "{{ mongodb_default_folder }}/"
    dest: "{{ mount_point }}"
    backup: true
  register: _copy
  become: true
  tags:
  - install
  - mount
  - folder

- name: Delete Default Folder
  ansible.builtin.file:
    path: "{{ mongodb_default_folder }}"
    state: absent
  register: _del
  become: true
  tags:
  - install
  - folder

- name: Create Soft Link 
  ansible.builtin.file:
    src: "{{ mount_point }}"
    path: " {{ mongodb_default folder }}"
    state: link
    owner: "{{ mongodb_user }}"
    group: "{{ mongodb_group }}"
  become: true
  notify: 
    - Restart Mongodb
  tags:
  - install
  - folder

# If reply Is True
- name: Install dependencies
  ansible.builtin.include_tasks:
    file: install_dependencies.yml
  when: repli
  tags:
  - replicaset

- name: If Replicaset is True
  ansible.builtin.include_tasks:
    file: init_replicaset
  when: repli 
  tags:
  - replicaset






